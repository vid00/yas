package vida.phd.yas.database;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import vida.phd.yas.database.entity.Malware;

public class MalwareDao {

  public Malware insert(Connection conn, String name, Integer familyId) throws SQLException {
    Malware result = null;
    String sql = "INSERT INTO MALWARE (FAMILY_ID, NAME) VALUES (?, ?)";
    PreparedStatement statement = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    statement.setInt(1, familyId);
    statement.setString(2, name);

    statement.executeUpdate();

    ResultSet generatedKeys = statement.getGeneratedKeys();

    if (generatedKeys.next()) {
      result = new Malware();
      result.setName(name);
      result.setId(generatedKeys.getInt(1));
    }

    return result;
  }

  public Malware load(Connection conn, String name) throws SQLException {
    Malware result = null;

    String sql = "SELECT * FROM MALWARE WHERE NAME = ?";
    PreparedStatement statement = conn.prepareStatement(sql);
    statement.setString(1, name);
    ResultSet resultSet = statement.executeQuery();

    if (resultSet.next()) {
      result = new Malware();

      result.setId(resultSet.getInt("ID"));
      result.setFamilyId(resultSet.getInt("FAMILY_ID"));
      result.setName(resultSet.getString("NAME"));
    }

    return result;
  }
  
  public Malware load(Connection conn, int id) throws SQLException {
    Malware result = null;

    String sql = "SELECT * FROM MALWARE WHERE ID = ?";
    PreparedStatement statement = conn.prepareStatement(sql);
    statement.setInt(1, id);
    ResultSet resultSet = statement.executeQuery();

    if (resultSet.next()) {
      result = new Malware();

      result.setId(resultSet.getInt("ID"));
      result.setFamilyId(resultSet.getInt("FAMILY_ID"));
      result.setName(resultSet.getString("NAME"));
    }

    return result;
  }

  public List<Malware> loadByFamily(Connection conn, Integer familyId) throws SQLException {
    List<Malware> result = new ArrayList<>();

    String sql = "SELECT * FROM MALWARE WHERE FAMILY_ID = ?";
    PreparedStatement statement = conn.prepareStatement(sql);
    statement.setInt(1, familyId);
    ResultSet resultSet = statement.executeQuery();

    while (resultSet.next()) {
      Malware malware = new Malware();

      malware.setId(resultSet.getInt("ID"));
      malware.setFamilyId(resultSet.getInt("FAMILY_ID"));
      malware.setName(resultSet.getString("NAME"));

      result.add(malware);
    }

    return result;
  }

  public List<Malware> loadAll(Connection conn) throws SQLException {
    List<Malware> result = new ArrayList<>();

    String sql = "SELECT * FROM MALWARE ORDER BY `name`";
    PreparedStatement statement = conn.prepareStatement(sql);    
    ResultSet resultSet = statement.executeQuery();

    while (resultSet.next()) {
      Malware malware = new Malware();

      malware.setId(resultSet.getInt("ID"));
      malware.setFamilyId(resultSet.getInt("FAMILY_ID"));
      malware.setName(resultSet.getString("NAME"));

      result.add(malware);
    }

    return result;
  }

  public void deleteByFamily(Connection conn, Integer familyId) throws SQLException {
    String sql = "DELETE FROM MALWARE WHERE FAMILY_ID = ?";
    PreparedStatement statement = conn.prepareStatement(sql);
    statement.setInt(1, familyId);
    statement.executeUpdate();
  }
}
